{"version":3,"sources":["axios.js","Components/iportal/jobs/job_detail.js","Components/Form/loader.js"],"names":["baseURL","token","undefined","user","store","getState","auth","loggedin","axios","create","headers","Authorization","Access","job_detail","state","startup_detail","jobs","loading","msg","applied","_job_apply_","document","querySelector","click","startup_id","this","props","match","params","job_id","faxios","get","then","res","console","log","data","setState","id","count","job","startup","className","style","background","marginTop","maxWidth","key","class","justifyContent","name","location","fontSize","format_date","start_date","duration","stipend","posted_on","apply_by","brief","dangerouslySetInnerHTML","__html","about_the_job","perks","skills_required","who_can_apply","no_of_opening","indiv_startup_html","border","disabled","onClick","display","to","Component","connect","actions","loader","role"],"mappings":"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","file":"static/js/29.0ea42b4c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { store } from './index'\n\n\nexport let baseURL =\"https://ecell.nitrr.ac.in\";\n//export let baseURL =\"http://localhost:8000\";\n// export let baseURL =\"http://8a22a572.ngrok.io\";\n\n    \nif (process.env.NODE_ENV === 'production') {\n    baseURL = \"\"\n}\n\n\nexport default () => {\n    let token = undefined\n    let accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJhbmRyb2lkIiwib3JnYW5pemF0aW9uIjoiRUNlbGwifQ.H2aaDJuOxK44D2kwRCWwv9s5rzJGCNYKT3thtQqN-hQ';\n    const user = store.getState().auth\n\n    \n    if (user) {\n        // console.log({user})\n        token = user.loggedin ? user.token : undefined\n    }\n    return axios.create({\n        baseURL,\n        headers: {\n            Authorization: token,\n            Access: accessToken\n\n        }\n    });\n};\n","import React, { Component, Fragment } from 'react'\nimport faxios from '../../../axios'\nimport Loader from '../../Form/loader'\nimport {Link} from 'react-router-dom'\nimport './jobs.css'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../actions/authActions'\nimport { format_date } from '../../constants'\n\n\nclass job_detail extends Component {\n\n    state={\n        startup_detail:[],\n        jobs:[],\n        loading:true,\n        msg:'',\n        applied:false\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        updateUser: PropTypes.func.isRequired,\n    }\n\n    \n\n    componentDidMount(){\n        const startup_id = this.props.match.params.startup_id;\n        const job_id=this.props.match.params.job_id\n\n        faxios().get(`/iportal/startup/${startup_id}/`).then(res=>{\n            console.log(res)\n            let data = res.data\n\n            this.setState({\n                startup_detail:data,\n            })\n            console.log(this.state.startup_detail)\n        })\n\n        faxios().get(`/iportal/job/${job_id}/`).then(res=>{\n            let data = res.data\n            console.log(data)\n            this.setState({\n                jobs:data\n            })\n        })\n\n\n       \n\n        faxios().get(`/iportal/job_application/?job=${job_id}&applicant=${this.props.auth.id}`).then(res=>{\n            console.log(res)\n            console.log(job_id)\n            console.log(this.props.auth.id)\n            let data = res.data;\n\n            if(data.count===0){\n                this.setState({\n                    loading:false,\n                    msg:'Apply Now',\n                    applied:false\n                })\n            }\n\n            if(data.count===1){\n                this.setState({\n                    loading:false,\n                    msg:'Applied',\n                    applied:true\n                })\n            }\n        })\n\n    }\n\n    _job_apply_ = () =>{\n        document.querySelector('.job_apply_btn').click()\n    }\n\n\n    render() {\n        \n        \n\n        let jobs_html_tab = (job)=>{\n            \n            return(\n                <div className=\"my-4\" key={job.id}>\n\n                        <div class=\"card\">\n                        <div class=\"card-header green text-white d-flex\" style={{justifyContent:\"space-between\"}}>\n                            <div ><h4 className=\" indiv_job font-weight-bold\">{job.name}</h4></div>\n                            {/* <div style={{fontSize:\"15px\"}} className=\"badge badge-dark p-2\">{job.job_type}</div> */}\n                        </div>\n                        <div class=\"card-body\">\n                            <div>\n                                <div className=\"mb-2\"><strong>Location : </strong>{job.location}</div>\n                                <hr className=\"gray\"></hr>\n\n                                {/*For Desktop*/}\n                                <div className=\"d-flex job_flex\">\n                                    <div className=\"text-center\">\n                                        <div style={{fontSize:\"14px\"}}><strong>Start Date</strong></div>\n                                        <div style={{fontSize:\"13px\"}}>{format_date(job.start_date)}</div>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <div style={{fontSize:\"14px\"}}><strong>Duration</strong></div>\n                                        <div style={{fontSize:\"13px\"}}>{job.duration}</div>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <div style={{fontSize:\"14px\"}}><strong>Stipend</strong></div>\n                                        <div style={{fontSize:\"13px\"}}>{job.stipend}</div>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <div style={{fontSize:\"14px\"}}><strong>Posted On</strong></div>\n                                        <div style={{fontSize:\"13px\"}}>{format_date(job.posted_on)}</div>\n                                    </div>\n\n                                    <div className=\"text-center\">\n                                        <div style={{fontSize:\"14px\"}}><strong>Apply By</strong></div>\n                                        <div style={{fontSize:\"13px\"}}>{format_date(job.apply_by)}</div>\n                                    </div>\n                                </div>\n\n                                {/*For Mobile*/}\n\n                                <div className=\"job_flex2\">\n                                    <div className=\"\">\n                                        <div style={{fontSize:\"13px\"}}><strong>Start Date : </strong>{format_date(job.start_date)}</div>\n                                        \n                                    </div>\n\n                                    <div className=\"\">\n                                        <div style={{fontSize:\"13px\"}}><strong>Duration : </strong>{job.duration}</div>\n                                        \n                                    </div>\n\n                                    <div className=\"\">\n                                        <div style={{fontSize:\"13px\"}}><strong>Stipend : </strong>{job.stipend}</div>\n                                        \n                                    </div>\n\n                                    <div className=\"\">\n                                        <div style={{fontSize:\"13px\"}}><strong>Posted On : </strong>{format_date(job.posted_on)}</div>\n                                    </div>\n\n                                    <div className=\"\">\n                                        <div style={{fontSize:\"13px\"}}><strong>Apply By :</strong>{format_date(job.apply_by)}</div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n            )\n        }\n\n        let jobs_html_detail =(job)=>{\n            \n            return(\n            <div>\n                <div><strong className=\"font-weight-bold\">Posted On :</strong> {format_date(job.posted_on)}</div><br></br>\n                <div><strong className=\"font-weight-bold\">About the job :</strong><br></br> <div dangerouslySetInnerHTML={{ __html:job.about_the_job }}></div></div><br></br>\n                <div><span className=\"font-weight-bold\">Perks :</span><br></br> <div dangerouslySetInnerHTML={{ __html:job.perks }}></div></div><br></br>\n                <div><span className=\"font-weight-bold\">Skills Required : </span><br></br> <div dangerouslySetInnerHTML={{ __html:job.skills_required }}></div></div><br></br>\n                <div><span className=\"font-weight-bold\">Who can apply :</span><br></br> <div dangerouslySetInnerHTML={{ __html:job.who_can_apply }}></div> </div><br></br>\n                <div><span className=\"font-weight-bold\">No of openings :</span> {job.no_of_opening}</div><br></br>\n                <div><span className=\"font-weight-bold\">Apply By : </span> {format_date(job.apply_by)}</div><br></br>\n            </div>\n\n            )\n        }\n\n           \n        \n\n        let startup = this.state.startup_detail\n\n        let indiv_startup_html= (startup) => {\n            return(\n                <div>\n                    <div className=\"start-name font-weight-bold\" style={{fontSize:\"20px\"}}>{startup.name}</div><br></br>\n                    {/* <div className=\"start-sect font-weight-bold text-success\">{startup.sector}</div><br></br> */}\n                    <div className=\"start-brief\"><strong className=\"font-weight-bold\">Brief</strong>: {startup.brief}</div><br></br>\n                    {jobs_html_detail(this.state.jobs)}\n\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {this.state.loading ?<div className=\"my-5 text-center\">\n                            <i className=\"fa fa-2x fa-spinner fa-spin\"></i>\n                        </div> : <Fragment>\n                    <div  style={{background:\"lightgray\",marginTop:\"-60px\"}}>\n                        <div className=\"container-fluid\" style={{maxWidth:\"1200px\"}}>\n                            {jobs_html_tab(this.state.jobs)}\n                        </div>\n                        <div className=\"container-fluid\" style={{maxWidth:\"1200px\"}}>\n\n                            <div class=\"jumbotron\">\n                                {indiv_startup_html(startup)}            \n                                <hr class=\"my-4\"></hr>\n\n                                <div className=\"d-flex justify-content-center\"><button className=\"bg-white\" style={{border:\"none\"}} >{this.state.loading?<Loader/>:this.state.applied?(<button className=\"btn btn-success font-weight-bold\"disabled >{this.state.msg}</button>):(<button onClick={this._job_apply_} className=\"btn btn-primary font-weight-bold\" >{this.state.msg}</button>)}</button></div>\n                                <Link className=\"job_apply_btn\" style={{display:\"none\"}} to={`/internship/jobs/application/${this.props.match.params.job_id}`}></Link>\n                            </div>\n\n                        </div>\n                    </div>\n                </Fragment>}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => state\nexport default connect(mapStateToProps, actions)(job_detail)\n","import React from \"react\";\n\n const loader = ()=>\n    <div className=\"spinner-border text-light\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n</div>\n\n export default loader;"],"sourceRoot":""}