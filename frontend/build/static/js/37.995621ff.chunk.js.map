{"version":3,"sources":["axios.js","Components/iportal/jobs/job_application.js","Components/common/wysiwyg.js"],"names":["baseURL","token","undefined","user","store","getState","auth","loggedin","axios","create","headers","Authorization","Access","job_application","job_id","Number","props","match","params","state","uploading","loading","job_detail","progress","file","validate","err_num","error","check","_upload_application","e","preventDefault","setState","college","value","length","console","log","ques1","ques2","data","FormData","request","XMLHttpRequest","append","resume","files","id","addEventListener","JSON","parse","target","response","history","goBack","upload","Math","round","loaded","total","open","setRequestHeader","send","faxios","get","this","then","res","className","onClick","style","paddingTop","name","job_type","ref","ele","type","class","role","width","height","aria-valuemin","aria-valuemax","rows","Component","connect","actions","summernote","editorState","EditorState","createEmpty","set_value","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","get_value","draftToHtml","convertToRaw","getCurrentContent","check_input","hasText","onRef","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange"],"mappings":"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","file":"static/js/37.995621ff.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { store } from './index'\n\n\nexport let baseURL =\"https://ecell.nitrr.ac.in\";\n//export let baseURL =\"http://localhost:8000\";\n// export let baseURL =\"http://8a22a572.ngrok.io\";\n\n    \nif (process.env.NODE_ENV === 'production') {\n    baseURL = \"\"\n}\n\n\nexport default () => {\n    let token = undefined\n    let accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJhbmRyb2lkIiwib3JnYW5pemF0aW9uIjoiRUNlbGwifQ.H2aaDJuOxK44D2kwRCWwv9s5rzJGCNYKT3thtQqN-hQ';\n    const user = store.getState().auth\n\n    \n    if (user) {\n        // console.log({user})\n        token = user.loggedin ? user.token : undefined\n    }\n    return axios.create({\n        baseURL,\n        headers: {\n            Authorization: token,\n            Access: accessToken\n\n        }\n    });\n};\n","import React, { Component, Fragment } from 'react'\nimport faxios, { baseURL } from '../.././../axios'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../actions/authActions'\nimport Wysiwyg from '../../common/wysiwyg'\n\n\nclass job_application extends Component {\n    job_id = Number(this.props.match.params.job_id)\n\n    state = {\n        uploading: false,\n        loading:false,\n        job_detail: {},\n        progress: 0,\n        file: null,\n        validate:true,\n        err_num:[],\n        error:false,\n        check:false\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        updateUser: PropTypes.func.isRequired,\n    }\n\n\n    componentDidMount() {\n        \n        faxios().get(`/iportal/job/${this.job_id}/`).then(res => {\n\n            let data = res.data\n            console.log(data)\n            this.setState({\n                job_detail: data\n            })\n        })\n    }\n\n    _upload_application = (e) => {\n        e.preventDefault()\n        this.setState({\n            uploading: true,\n            loading:true,\n            error:false\n        })\n\n        if(this.college.value.length<1){\n            this.setState({\n              error:true,\n                uploading:false,\n                loading:false,\n            })\n\n            console.log(\"This runs 2\")\n            return\n        }\n\n\n        if(this.ques1.value.length<1){\n            this.setState({\n              error:true,\n                uploading:false,\n                loading:false,\n            })\n\n            console.log(\"This runs 2\")\n            return\n        }\n\n        if(this.ques2.value.length<1){\n            this.setState({\n                error:true,\n                uploading:false,\n                loading:false\n            })\n\n          \n            return\n        }\n\n        var data = new FormData();\n        var request = new XMLHttpRequest();\n\n\n        data.append('resume', this.resume.files[0])\n        data.append('college', this.college.value)\n        data.append('ques1', this.ques1.value)\n        data.append('ques2', this.ques2.value)\n        data.append('job', this.job_id)\n        data.append('applicant', this.props.auth.id)\n\n\n        // load event\n        request.addEventListener('load', (e) => {\n            const data = JSON.parse(e.target.response)\n\n            this.setState({\n                uploading: false,\n                progress: 0\n            })\n\n            if(data.id){\n                this.props.history.goBack()\n            }else{\n                this.setState({error:true})\n            }\n        });\n\n        // monitor progress of upload\n        request.upload.addEventListener('progress', (e) => {\n            var progress = Math.round((e.loaded / e.total) * 100)\n            console.log({ progress })\n\n            if(progress===100){\n                this.setState({loading:false,check:true})\n            }\n\n            this.setState({ progress })\n        })\n\n\n\n        request.open('post', baseURL + '/iportal/job_application/');\n        request.setRequestHeader('Authorization', this.props.auth.token)\n        request.send(data);\n        this.setState({ uploading: false })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className='container jumbotron'>\n\n                    <div>\n                        <button onClick={() => this.props.history.goBack()} className=\"btn align-self-center font-weight-bold btn-primary\">Go Back</button>\n                    </div>\n\n                    <h1 className=\"mt-5 jb_app font-weight-bold text-center\" style={{paddingTop:\"-40px\"}}>Job Application</h1>\n                    <h2 className=\"mt-4 jb_apps font-weight-bold text-center\">{this.state.job_detail.name} ({this.state.job_detail.job_type})</h2>\n\n                    <div className=\"text-center font-weight-bold my-5\">\n                        Upload your Resume : <input className=\"btn btn-success text-center font-weight-bold\" ref={ele => this.resume = ele} type=\"file\" /> <span className=\"font-weight-bold\">{this.state.progress? `${this.state.progress}%`:null}</span>   \n                    </div>\n\n                    {this.state.uploading ?\n                        <span>\n                            {this.state.progress ? <Fragment>\n                                <div class=\"progress md-progress\" style=\"height: 20px\">\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${this.state.progress}%`, height: \"20px\" }} aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress}%</div>\n                                </div>\n                            </Fragment> : null}\n                        </span>\n                        :\n                        null}\n\n                    <div className=\"font-weight-bold my-4\">College Name</div>\n                    <input type=\"text\" ref={ele => this.college = ele} className=\"form-control\" />\n\n                    <div className=\"font-weight-bold my-4\">How you are suitable for this job?</div>\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"12\" ref={ele => this.ques1 = ele} />\n\n                    <div className=\"font-weight-bold my-4\">During what timeframe you are available for the job?</div>\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"12\" ref={ele => this.ques2 = ele} />\n\n                    <div className=\"text-center\">\n                        <div className=\"text center text-danger\">\n                            {this.state.error? 'Please ensure that all questions are answered and resume file selected for upload.':null}\n                        </div>\n                        <button onClick={this._upload_application} type=\"submit\" className=\"btn font-weight-bold my-4 btn-primary\">{this.state.loading ?  <i className=\"fa fa-spinner fa-spin\"></i>: this.state.check?'Redirecting..':'Submit'}</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => state\nexport default connect(mapStateToProps, actions)(job_application)","import React, { Component } from 'react'\nimport './wysiwyg.scss'\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n\n\nexport default class summernote extends Component {\n  state = {\n    editorState: EditorState.createEmpty()\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  set_value = html => {\n    const contentBlock = htmlToDraft(html);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({editorState})\n    }\n  }\n\n  get_value = () => draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n\n  check_input =()=>{\n    return this.state.editorState.getCurrentContent().hasText()\n  }\n\n\n  render() {\n    return (\n      <div className=\"wysiwyg\">\n        <Editor\n          editorState={this.state.editorState}\n          toolbarClassName=\"toolbarClassName\"\n          wrapperClassName=\"wrapperClassName\"\n          editorClassName=\"editorClassName\"\n          onEditorStateChange={editorState => this.setState({ editorState })}\n        />\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}