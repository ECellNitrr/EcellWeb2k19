{"version":3,"sources":["axios.js","Components/iportal/jobs/job_application.js","Components/common/wysiwyg.js"],"names":["__webpack_require__","d","__webpack_exports__","baseURL","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_index__WEBPACK_IMPORTED_MODULE_1__","token","undefined","user","store","getState","auth","loggedin","axios","create","headers","Authorization","Access","job_application","job_id","Number","_this","props","match","params","state","uploading","job_detail","progress","file","validate","err_num","error","_upload_application","e","preventDefault","setState","ques1","get_value","length","console","log","ques2","data","FormData","request","XMLHttpRequest","append","resume","files","id","addEventListener","JSON","parse","target","response","history","goBack","upload","Math","round","loaded","total","open","setRequestHeader","send","_this2","this","faxios","get","concat","then","res","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","style","paddingTop","name","job_type","ref","ele","type","react__WEBPACK_IMPORTED_MODULE_5__","class","role","width","height","aria-valuemin","aria-valuemax","_common_wysiwyg__WEBPACK_IMPORTED_MODULE_9__","onRef","disabled","Component","connect","actions","summernote","editorState","EditorState","createEmpty","set_value","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","draftToHtml","convertToRaw","getCurrentContent","check_input","hasText","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_8__","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange"],"mappings":"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","file":"static/js/37.ac33125f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { store } from './index'\n\n\nexport let baseURL =\"https://ecell.nitrr.ac.in\";\n//export let baseURL =\"http://localhost:8000\";\n// export let baseURL =\"http://002b5f54.ngrok.io\";\n\n    \nif (process.env.NODE_ENV === 'production') {\n    baseURL = \"\"\n}\n\n\nexport default () => {\n    let token = undefined\n    let accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJhbmRyb2lkIiwib3JnYW5pemF0aW9uIjoiRUNlbGwifQ.H2aaDJuOxK44D2kwRCWwv9s5rzJGCNYKT3thtQqN-hQ';\n    const user = store.getState().auth\n\n    \n    if (user) {\n        // console.log({user})\n        token = user.loggedin ? user.token : undefined\n    }\n    return axios.create({\n        baseURL,\n        headers: {\n            Authorization: token,\n            Access: accessToken\n\n        }\n    });\n};\n","import React, { Component, Fragment } from 'react'\nimport faxios, { baseURL } from '../.././../axios'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../actions/authActions'\nimport Wysiwyg from '../../common/wysiwyg'\n\n\nclass job_application extends Component {\n    job_id = Number(this.props.match.params.job_id)\n\n    state = {\n        uploading: false,\n        job_detail: {},\n        progress: 0,\n        file: null,\n        validate:true,\n        err_num:[],\n        error:false\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        updateUser: PropTypes.func.isRequired,\n    }\n\n\n    componentDidMount() {\n        \n        faxios().get(`/iportal/job/${this.job_id}/`).then(res => {\n\n            let data = res.data\n            console.log(data)\n            this.setState({\n                job_detail: data\n            })\n        })\n    }\n\n    _upload_application = (e) => {\n        e.preventDefault()\n        this.setState({\n            uploading: true\n        })\n\n        if(this.ques1.get_value().length<9){\n            this.setState({\n              error:true,\n                uploading:false\n            })\n\n            console.log(\"This runs 2\")\n            return\n        }\n\n        if(this.ques2.get_value().length<9){\n            this.setState({\n                error:true,\n                uploading:false\n            })\n\n            console.log(\"This runs 2\")\n            return\n        }\n\n        var data = new FormData();\n        var request = new XMLHttpRequest();\n\n\n        data.append('resume', this.resume.files[0])\n        data.append('ques1', this.ques1.get_value())\n        data.append('ques2', this.ques2.get_value())\n        data.append('job', this.job_id)\n        data.append('applicant', this.props.auth.id)\n\n\n        // load event\n        request.addEventListener('load', (e) => {\n            const data = JSON.parse(e.target.response)\n\n            this.setState({\n                uploading: false,\n                progress: 0\n            })\n\n            if(data.id){\n                this.props.history.goBack()\n            }else{\n                this.setState({error:true})\n            }\n        });\n\n        // monitor progress of upload\n        request.upload.addEventListener('progress', (e) => {\n            var progress = Math.round((e.loaded / e.total) * 100)\n            console.log({ progress })\n\n            this.setState({ progress })\n        })\n\n\n\n        request.open('post', baseURL + '/iportal/job_application/');\n        request.setRequestHeader('Authorization', this.props.auth.token)\n        request.send(data);\n        this.setState({ uploading: false })\n\n\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className='container jumbotron'>\n\n                    <div>\n                        <button onClick={() => this.props.history.goBack()} className=\"btn align-self-center font-weight-bold btn-primary\">Go Back</button>\n                    </div>\n\n                    <h1 className=\"mt-5 jb_app font-weight-bold text-center\" style={{paddingTop:\"-40px\"}}>Job Application</h1>\n                    <h2 className=\"mt-4 jb_apps font-weight-bold text-center\">{this.state.job_detail.name} ({this.state.job_detail.job_type})</h2>\n\n                    <div className=\"text-center font-weight-bold my-5\">\n                        Upload your Resume : <input className=\"btn btn-success text-center font-weight-bold\" ref={ele => this.resume = ele} type=\"file\" /> <span className=\"font-weight-bold\">{this.state.progress? `${this.state.progress}%`:null}</span>   \n                    </div>\n\n                    {this.state.uploading ?\n                        <span>\n                            {this.state.progress ? <Fragment>\n                                <div class=\"progress md-progress\" style=\"height: 20px\">\n                                    <div class=\"progress-bar\" role=\"progressbar\" style={{ width: `${this.state.progress}%`, height: \"20px\" }} aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress}%</div>\n                                </div>\n                            </Fragment> : null}\n                        </span>\n                        :\n                        null}\n\n                    <div className=\"font-weight-bold my-4\">How you are suitable for this job?</div>\n                    <Wysiwyg onRef={ele => this.ques1 = ele} />\n\n                    <div className=\"font-weight-bold my-4\">During what timeframe you are available for the job?</div>\n                    <Wysiwyg onRef={ele => this.ques2 = ele} />\n\n                    <div className=\"text-center\">\n                        <div className=\"text center text-danger\">\n                            {this.state.error? 'Please ensure that all questions are answered and resume file selected for upload.':null}\n                        </div>\n                        <button onClick={this._upload_application} disabled={this.state.uploading} type=\"submit\" className=\"btn font-weight-bold my-4 btn-primary\">{this.state.uploading ? 'Uploading': 'Submit'}</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => state\nexport default connect(mapStateToProps, actions)(job_application)","import React, { Component } from 'react'\nimport './wysiwyg.scss'\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\n\n\nexport default class summernote extends Component {\n  state = {\n    editorState: EditorState.createEmpty()\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  set_value = html => {\n    const contentBlock = htmlToDraft(html);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({editorState})\n    }\n  }\n\n  get_value = () => draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n\n  check_input =()=>{\n    return this.state.editorState.getCurrentContent().hasText()\n  }\n\n\n  render() {\n    return (\n      <div className=\"wysiwyg\">\n        <Editor\n          editorState={this.state.editorState}\n          toolbarClassName=\"toolbarClassName\"\n          wrapperClassName=\"wrapperClassName\"\n          editorClassName=\"editorClassName\"\n          onEditorStateChange={editorState => this.setState({ editorState })}\n        />\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}