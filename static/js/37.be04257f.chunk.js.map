{"version":3,"sources":["axios.js","actions/authActions.js","Components/iportal/jobs/job_application.js"],"names":["__webpack_require__","d","__webpack_exports__","baseURL","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_index__WEBPACK_IMPORTED_MODULE_1__","token","undefined","user","store","getState","auth","loggedin","axios","create","headers","Authorization","Access","r","updateUser","payload","dispatch","type","job_application","state","uploading","job_detail","progress","file","_upload_application","e","preventDefault","_this","setState","data","FormData","request","XMLHttpRequest","append","resume","ques1","ques2","props","match","params","job_id","user_id","addEventListener","upload","Math","round","loaded","total","console","log","open","setRequestHeader","send","_this2","this","faxios","get","concat","then","res","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","class","ref","ele","react__WEBPACK_IMPORTED_MODULE_5__","style","role","width","height","aria-valuemin","aria-valuemax","onClick","disabled","className","Component","connect","actions"],"mappings":"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","file":"static/js/37.be04257f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { store } from './index'\n\n//export let baseURL = \"http://e8ac5280.ngrok.io/\"\n// export let baseURL =\"https://ecell.nitrr.ac.in\";\nexport let baseURL =\"http://localhost:8000\";\n    \nif (process.env.NODE_ENV === 'production') {\n    baseURL = \"\"\n}\n\n\nexport default () => {\n    let token = undefined\n    let accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnQiOiJhbmRyb2lkIiwib3JnYW5pemF0aW9uIjoiRUNlbGwifQ.H2aaDJuOxK44D2kwRCWwv9s5rzJGCNYKT3thtQqN-hQ';\n    const user = store.getState().auth\n\n    \n    if (user) {\n        // console.log({user})\n        token = user.loggedin ? user.token : undefined\n    }\n    return axios.create({\n        baseURL,\n        headers: {\n            Authorization: token,\n            Access: accessToken\n\n        }\n    });\n};\n","export const updateUser = payload => dispatch => {\n    dispatch({\n        type: 'update_user',\n        payload\n    })\n} ","import React, { Component, Fragment } from 'react'\nimport faxios,{baseURL} from '../.././../axios'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../actions/authActions'\n\n\nclass job_application extends Component {\n\n    state={\n        uploading:false,\n        job_detail:[],\n        progress:0,\n        file:null\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        updateUser: PropTypes.func.isRequired,\n    }\n\n\n    componentDidMount(){\n        const job_id=this.props.match.params.job_id\n        faxios().get(`/iportal/job/${job_id}/`).then(res =>{\n            \n            let data=res.data\n            console.log(data)\n            this.setState({\n                job_detail:data\n            })\n        })\n    }\n\n    _upload_application=(e)=>{\n\n        \n        e.preventDefault()\n        this.setState({\n             uploading:true\n        })\n        \n        var data = new FormData();\n        var request = new XMLHttpRequest();\n\n\n        data.append('resume',this.resume)\n        data.append('ques1',this.ques1)\n        data.append('ques1',this.ques2)\n        data.append('job',this.props.match.params.job_id)\n        data.append('applicant',this.props.auth.user_id)\n\n\n        // load event\n        request.addEventListener('load', (e) => {            \n            \n            this.setState({\n                uploading: false,\n                progress: 0\n            })\n        });\n\n            // monitor progress of upload\n            request.upload.addEventListener('progress', (e) => {\n            var progress = Math.round((e.loaded / e.total) * 100)\n            console.log({ progress })\n            \n            this.setState({ progress })\n        })\n\n\n\n        request.open('post', baseURL + '/iportal/job_application/');\n        request.setRequestHeader('Authorization', this.props.auth.token)\n        request.send(data);\n        this.setState({uploading:false})\n\n\n        \n\n    }\n\n    \n    render() {\n        return (\n            <div>              \n\n                \n                <div class=\"btn btn-primary\">\n                \n                <input ref={ele => this.resume = ele} type=\"file\"></input>\n                </div>\n                \n                {this.state.uploading ?\n                    <span>\n                        {this.state.progress ? <Fragment>\n                            <div class=\"progress md-progress\" style=\"height: 20px\">\n                                <div class=\"progress-bar\" role=\"progressbar\" style={{width:`${this.state.progress}%`,height:\"20px\"}}  aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress}%</div>\n                            </div>\n                        </Fragment> : null}\n                    </span>\n                    :\n                null}\n\n                <div>Ques1</div>\n                <input ref={ele => this.ques1 = ele}  type=\"text\"></input>\n                \n                <div>Ques2</div>\n                <input ref={ele => this.ques2 = ele}  type=\"text\"></input>\n                <button onClick={this._upload_application} disabled={this.state.uploading} type=\"submit\" className=\"btn btn-primary\">{this.state.uploading? 'Uploading': 'Submit'}</button>\n            \n                \n                \n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => state\nexport default connect(mapStateToProps, actions)(job_application)"],"sourceRoot":""}